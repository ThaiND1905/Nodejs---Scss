@use 'sass:math';

$grid-columns: 12;
$grid-gaps : (
    "0" : 0, 
    "1" : 10px,
    "2" : 20px,
    "3" : 30px,
);

$justify-content : flex-start, flex-end, center, space-between, space-around;


.container {
    width: 100%;
    margin: 0 auto;
    max-width: 1200px;
    padding : 0 20px;
    box-sizing: border-box;
}

.row{
    display: flex;
    flex-flow: row wrap;
}

//grid-gaps
@each $key, $value in $grid-gaps{
    .gap-#{$key} > *{
        padding: $value;
    }
    .gap-#{$key} {
        margin-left: -$value;
        margin-right: -$value;
    }
}

//layout
@each $val in $justify-content{
    .justify-#{$val} {
        justify-content: $val;
    }
}


//columns

@include xs {
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) !important;
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns{
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) !important;
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) !important;
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) !important;
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns) !important;
        }
    }
}

